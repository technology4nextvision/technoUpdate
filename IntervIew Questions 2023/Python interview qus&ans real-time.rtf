{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Python Interview Questions\par
Explain the difference between a list and the tuple?\par
There are many differences that makes list different from tuple. They are-\par
List is mutable, which means that it can\rquote t be utilized as a key in a dictionary. Whereas, tuples are immutable due to which you can\rquote t change the value in a tuple once you have made it.\par
The accurate syntax of tuples is displayed by parentheses \{\} while the accurate syntax of lists is displayed by square brackets [].\par
Tuples are varied data structures (i.e., their entries contain diverse implications), whereas lists are uniform series.\par
Tuples are for fixed length, lists are for uneven length.\par
Tuples illustrate structure while lists illustrate order.\par
Tuples contain O(N) insert, append, and delete performance while Lists contain O(1) insert, append, and delete performance.\par
 #2 Question\par
How does Python handle the memory management?\par
For memory management, Python includes a private heap consist all Python objects as well as data structures. Interpreter handles Python heap and that the programmer contains no access to it.\par
Python memory manager allocates heap space to Python objects. The core API of Python gives a few tools for the programmer to code unfailing and highly robust program.\par
\par
Additionally, Python contains a built-in garbage collector that recycles the memory which is unused. Once an object is no more referenced by the program, it frees up the heap space it occupied. The garbage collector determines objects that are no more referenced by the program liberated the in used memory as well as make it available to the heap space.\par
 #3 Question\par
How Python performs Compile-time and Run-time code checking?\par
Some portion of the Python coding is executed at compile time, but almost all the checking like name, type and so on, are deferred until code execution. So, if the Python code references a user-defined function that hardly exists, the code will run effectively. The Python code will be unsuccessful just with an exception while the code execution path is not present.\par
 #4 Question\par
Explain In detail \f1\endash  Inheritance in Python?\par
Python also supports Inheritance as well as Multiple Inheritance. Any class can inherit behaviour as well as attributes methods from different class, known as superclass. A class that inherits from a superclass is known as subclass. Another name for superclasses is ancestors too. There presents a hierarchy association between classes.\par
\par
Syntax of Inheritance in Python:\par
\par
class BaseClass:\par
\par
 Body of base class\par
\par
class DerivedClass(BaseClass):\par
\par
  Body of derived class\par
Various types of Inheritance\par
\par
Single Inheritance \endash  In this type of inheritance, derived class obtains the members of a particular super class.\par
Multi-Level Inheritance \endash  In this type of inheritance, a derived class d1 is inheriting the properties of base class base1, and another derived class is inheriting the properties of base2.\par
Hierarchical Inheritance \endash  In this type of inheritance, from single base class you can inherit many child classes\par
Multiple Inheritance \endash  In this type of inheritance, a derived class is inheriting the properties of many base classes.\par
 \par
 #5 Question\par
What is the use of try, except, finally and raise in Error Handling.\par
Python makes use of try, except and finally blocks for error handling. Try block is used to execute the code until an error occurs. We can make use of an except block to receive control which will receive control after all errors, or one can use specific exception handling blocks for various error types. Control is transferred to the appropriate except block. In all cases, the finally block is executed. Raise may be used to raise your own exceptions.\par
In case of error handling, Python uses try, except, finally and raise blocks.\par
Use of try block helps in executing the code until an error arises.\par
Use of except block helps in getting the control which further get control after each and every errors, or simply you can utilize particular exception handling blocks for different error types. Control is moreover moved to the suitable except block.\par
The finally block is executed in each case.\par
You can raise our own exception as well with the help of raise block.\par
 #6 Question\par
How are instance variables different from class variables?\par
Instance variables are usually made locally within a class to refer to an object of the class. A class variable is made globally within a class as well as can be accessed in every instance of the class.\par
Class variables are stated with keyword static as well as Instance variables are stated with static keyword.\par
\par
Class variables can be obtained anywhere in the class while an instance variable can be obtained in a specific object of the class.\par
\par
Class variables can be obtained by making use of class name of object reference. Instance variables can be obtained only with the help of object reference.\par
 #7 Question\par
Point out some of the key features of Python?\par
Here are some of the key features:\par
Python is basically an interpreted language, which means that unlike other programming languages and its variants, Python doesn\rquote t need compiling before being run. Other interpreted languages include Ruby and PHP.\par
Another feature that makes Python special is that its dynamically typed. This simply means that one doesn\rquote t need to state the types of variables when you declare them or anything like that.\par
It is very well suited to object orientated programming. It allows the definition of classes along with inheritance and composition. Python does not have access specifiers like public, private or C++, the justification for this point is given as \ldblquote we are all adults here\rdblquote\par
In this programming language the functions are all first-class objects. As the language can be assigned to variables, returned from other functions and passed into functions. Classes are also first class objects\par
 \par
 #8 Question\par
What is the parameter passing mechanism in Python?\par
Python consists of two parameter passing mechanism named as-\par
Pass by references: Every parameter (argument) is passed \ldblquote by reference\rdblquote  to the functions by default. However, in case you modify the value of the parameter in the function, the impact can also be reflected in the called function.\par
Pass by value: The pass by value is that at whatever time you pass the parameters to functions which are of the type such as strings, numbers, tuples. This is due to the immutable nature of them.\par
 \par
 #9 Question\par
What do you understand by the term Deep copy?\par
To store the values, which has already copied, deep copy is used. The reference pointers to the object are not copied by the deep copy. It simply helps in making reference to the object and the new object that is pointed by some other object gets stored. The changes are made in the original copy that will not affect any other copy while using the object. The Deep copy makes execution of the program slower due to making certain copies for each object that is been called.\par
 \par
 #10 Question\par
 How is memory managed in Python?\par
Following ways are used to manage memory in Python:\par
Python memory is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have an access to this private heap and interpreter takes care of this Python private heap. \par
The allocation of Python heap space for Python objects is done by Python memory manager. The core API gives access to some tools for the programmer to code.\par
Python also has an inbuilt garbage collector, which recycle all the unused memory and frees the memory and makes it available to the heap space.\par
 \par
 #11 Question\par
How is Multithreading achieved in Python?\par
 Python programming has a multi-threading package that can be used if one wants to multi-thread to speed their code up.\par
A construct called the Global Interpreter Lock (GIL) is available in Python. It is the work of the GIL to make sure that only one of the \lquote threads\rquote  can execute at any one point of time. Normally a thread accepts the GIL, does a little work, then passes it on the GIL to the next thread.  All this happens very quickly that will seem so to the human eye and it may seem like your threads are executing in parallel, but they are really just taking turns using the same CPU core. All this GIL passing adds overhead to execution. This means that if you want to make your code run faster then using the threading package often isn\rquote t a good idea.\par
\par
 \par
 #12 Question\par
What are the different uses of help() and dir() functions in Python?\par
dir() and help(), both the functions are accessible from the Python interpreter and used are generally used for viewing a consolidated dump of built-in functions. \par
Dir() function: The dir() function is used to display the defined symbols.\par
Help() function: This function is mainly used to display the string of documentation and also the facilitates you to see the help related to modules, keywords, attributes, etc.\par
\par
 \par
 \par
 #13 Question\par
 What is the dictionary in Python?\par
In Python, the built-in data-types is called dictionary. It is known to define the one-to-one relationship between the values and the keys. Dictionaries contain a pair of keys and their corresponding values. Dictionaries are generally indexed by the keys.\par
 \par
 #14 Question\par
 What does this mean: *args, **kwargs? And why would we use it?\par
Basically *args is applied when you are not sure about the number of arguments that are going to be passed to a function, or if there arises a need to pass stored list or tuple of arguments to a function.\par
Whereas, **kwargs is used when you are unsure about the number of keyword arguments that will be passed to a function, or it can be also used to pass the values of a dictionary as keyword arguments. The identifier args and kwargs are a convention, you could also use *bob and **billy but that would not be wise.\par
\par
 \par
 #15 Question\par
Explain split(), sub(), subn() methods of \ldblquote re\rdblquote  module in Python.\par
To modify the strings, Python\rquote s \ldblquote re\rdblquote  module is providing 3 methods. They are:\par
sub() \endash  finds all substrings where the regex pattern matches and then replace them with a different string\par
split() \endash  uses a regex pattern to \ldblquote split\rdblquote  a given string into a list.\par
subn() \endash  being similar to sub() it also returns the new string along with the number of replacements.\par
 \par
 #16 Question\par
Shade some light on the modes in Python Programming Environment.\par
Basically there are 2 types of modes in python programming that are:\par
Interactive Mode: This mode can be eventually taken up as a scratchpad that can be used to check out the codes in the Python Environment.\par
Script Mode: The script mode is basically used to save or compile the programs of Python that is rarely possible in the Interactive mode. To make such programs executable, the Script Mode is preferred.\par
 \par
 #17 Question\par
Specify the differences between Pyramid, Django, and Flask.\par
 Here are some of the considerable differences:\par
There are basically two frameworks available in the Python programming that are mainly\par
\par
Major Frameworks: pyramid and Django\par
Minor Frameworks: flask and Bottle\par
Firstly, Flask is a \ldblquote microframework\rdblquote  that is built with simpler applications that are on primary basis. Flask uses external libraries and is always ready to use.  Secondly, Pyramid is generally built for larger applications. As it provides a lot of flexibility and allows the developer to use the right kind of tools for the project, which makes it developer friendly.\par
\par
The developer can easily choose the database, template style, URL structure, and much more. Pyramid is heavily configurable. Lastly, Django can be also used for larger applications just like Pyramid. It basically includes an ORM.\par
\par
 \par
 #18 Question\par
 How is Python different from Java?\par
Java and Python are way different from each other, but both of them can be useful tools for high-tech developers. Also, Python is quite easies to master than Java if you are new to learning how to write programs. Below mentioned are the few points which clearly shows that python is different from Java. Here they are-\par
\par
Dynamic vs. Static Typing:\par
The very first difference between both of the powerful languages is the way they handle variables individually. Java uses static typing in which it wants the user to define the variable type when the user initially declare it and further, will not enable you to change the type later on in the program. Whereas, Python utilized dynamic typing, in which user is free to change the variable type.\par
Braces vs. Indentation:\par
Python make use of indentation so as to separate into blocks. Whereas, Java utilizes curly braces to clearly define the starting and end of every function as well as class definition.\par
Speed \par
The plus point of the Python programming language is that its programs tend to run quite faster than the Java programs.\par
 \par
 \par
 #19 Question\par
How does exception handling in Python differ from Java?\par
Python uses its own techniques to implement exception handling. <try-except> is the block that can be utilized by the programmer to view any type of error details without having to end the program. Additionally, in a few cases, this <try-except> statement provides a solution to handle the error.\par
 \par
 #20 Question\par
What is a module and package in Python?\par
Modules can be defined as the Python files with an extension \ldblquote .py\rdblquote . The module name will be same as that of the file name. A Python module can own a collection of classes, functions or variables defined as well as applied.\par
On the other side, Packages are namespaces which has various packages and modules themselves. They are merely directories.\par
\par
Every package in Python programming language is a directory which should have a special file known as _init_.py. This file can be void and it shows that the directory it consists is a Python package. This can be imported similar to the module which can be imported.\par
\par
 \par
 #21 Question\par
How to Install Python and Prepare Environment ?\par
To install python on different machine follow the steps below:\par
\par
Linux( Linux based os already shipped with python installed. If you need any specific version of the python language you can download and install it from the official website Python)\par
Windows: You can go to official website of Python and download the python installer for windows as per your windows architecture (64/86) and execute the installer after installing it in your machine.\par
Mac:\par
 \par
 #22 Question\par
What are the key features of using python?\par
Python is the most flexible language due to its dynamic nature.\par
\par
Functions in Python are first-class objects. Python follows OOPS paradigm that makes it more real-time coding experience.\par
\par
Python code is very clean by using indentation syntax. So its code is more clear than any other language.\par
\par
More natural language: you can express your ideas in more natural language compared to other languages.\par
\par
It has a huge community and growing faster so that it can be best promising language in the world.\par
\par
It has large number of packages based on almost every area of programming like machine learning, AI,\par
\par
Python has lots of interesting features you can check out on the official website.\par
\par
 \par
 #23 Question\par
How does ternary operator work in python?\par
Python has interesting philosophy using ternary operator. It has no ternary operation syntax. Python uses if else statement to perform the action.\par
\par
print("Equal") if 5==5 else print("Not equal")\par
5!=5 and 'Equal' or 'Not equal'\par
 0 Answer  Suggest an edit\par
 #24 Question\par
What is the use of \lquote self\rquote  keyword in python?\par
In python \lquote self\rquote  references the instance of the class.\par
\par
\par
 \par
\par
 #25 Question\par
What are generators in python?\par
Generators are used in python to return an iterable object. It is used to modify the behavior of the loop statement. Loops can be replaced with generators to perform on large dataset efficiently\f0\lang1033 .\f1\lang9\par
 #26 Question\par
What is lambda in python?\par
Lambda is single line code block which can have multiple arguments. It behaves like a function without function name.\par
\par
Cube = lambda x : x * x * x\par
 \par
 #27 Question\par
What is a negative indexing in python?\par
Python sequences are managed by integer values (-ve 0 -ve). They can be accessed both wise. Positive indices start with 0 and continue to 1, 2, 3, \'85. N and Negative indices start with -1 and point to the last index.\par
\par
Name = \ldblquote python\rdblquote\par
\par
Name[-1] /////// n\par
\par
Name[:-1]  ////// python\par
 \par
 #28 Question\par
What is deep copy in python?\par
Generally, we use copy function of the copy module to make a duplicate data. But this copy function only makes the copy of reference that means if we change the new object then this will change the original as well.\par
\par
So, we use deep copy of the copy module so that we can create a new object with original one and can modify the newly created object separately.\par
\par
 \par
 #29 Question\par
What do you understand by mutable and immutable in python?\par
Python sequences are mutable if we can change the data after initialization whereas sequences that can not be changed once created then they immutable.\par
\par
In Python, tuples are immutable whereas lists and dictionaries are mutable.\par
\par
 \par
 #30 Question\par
What is monkey patching in python?\par
Monkey patching is a concept by which we can change the function behavior in runtime. Due to the dynamic nature of the python, we can replace the body of a class function to new one. It is very useful in testing the python application. For example, if we have any class method which returns some api data and during testing, we don\rquote t want the api data and use some local data then we can change the function and assign another function to it.\par
\par
 \par
 \par
 #31 Question\par
What do you understand by *args and **kwarg python?\par
These are just arguments variable passed to function in the definition part. When we don\rquote t know the number of arguments passed to a function then we use *args. Same is applied to *kwargs but it accepts keyword arguments(Python dictionary).\par
\par
The name can be anything like a variable name. We just use the above name (args,  kwargs) because it is very understandable to programmers.\par
\par
 \par
 #32 Question\par
How do you avoid cyclic imports without resorting to imports in functions?\par
Refactoring your code is one of the solution to this kind of problem. You could restructure functions into different modules, which will clean up everything along with this particular issue.\par
\par
 \par
 #33 Question\par
How to read a 10GB (or larger) file size in python?\par
If you had to open large files, you could operate on chunks, and not one byte at a time. To be precocious, make sure RAM of the target machine is enough How are you operating on the file? What are you returning from the file? In what pattern are you accessing the date on the file (like maybe in random sampling or using some serialized mechanism)? There could be many factors that could affect your response to this question.\par
\par
 \par
 #34 Question\par
What are docstrings and comments?\par
Docstring refers to documentation string for a function. It must be defined at first, within a function that defines it. Though there\rquote s not much difference between the two, one could put it this way\endash  Docstrings are for documentation, however, comments are for code readers/reviewers.\par
\par
 \par
 #35 Question\par
What are \ldblquote special\rdblquote  methods in python?\par
Few methods like str and gt are examples of the special method. They override the behavior of other global functions/operators and will be used with the with keyword. Overriding those functions might lead to unintended behaviors in a dynamic language like Python, thus, they are meant to be used very carefully.\par
\par
 \par
 #36 Question\par
What are the rules for local and global variables in Python?\par
In Python, variables that are only called and declared inside a function become inherently global. But, If a variable is assigned a new value within the same function, it will then be a local variable.\par
\par
But, you also have the flexibility of explicitly declaring a variable as "global" within the same function.\par
\par
\par
\par
 #37 Question\par
Explain garbage collection in Python ?\par
Garbage collection generally depends on which implementation. In particular, CPython uses reference counting, and a creative cyclic collector that\rquote s both generational and utilizes its reference count itself to detect continuously iterating loops or cycles.\par
\par
 \par
 #38 Question\par
What are range and xrange ?\par
Range returns a list. Xrange object which takes the same memory independent of the range size.\par
\par
While using range, one can have all items already generated which can consume a lot of memory. Using xrange, one can get the elements one by one i.e. only one element is generated per loop.\par
\par
\par
 #39 Question\par
Can you explain how python is interpreted.\par
Python program are executed directly from the source code. These source codes are converted into intermediate language first and then to the machine/native language through the interpreter. And, the program is executed then after.\par
\par
\par
 #40 Question\par
What are decorators in python and how do you use them?\par
Decorators are not exclusively made for python and are functions that have a capability of accepting a function as an argument and could return functions. A simple example might be a decorator that takes a function, then outputs(or prints it argument) with stdout, prints the return value using stdout, then returns that returns that value. The syntax for decorators in python uses the @decorator_name above any function definition.\par
\par
\par
 #41 Question\par
What is use of @classmethod, @staticmethod, @property in Python?\par
   \par
\par
\par
 #42 Question\par
What are Iterators in Python?\par
   \par
\par
 \par
 \par
 #43 Question\par
What is the difference between append() and extend() method in Python?\par
   \par
\par
\par
 #44 Question\par
What is pass in Python?\par
  \par
\par
 \par
 #45 Question\par
Differentiate between deep and shallow copy in Python?\par
  \par
\par
\par
 #46 Question\par
How to compare two lists in Python?\par
  \par
\par
 0 Answer  Suggest an edit\par
 #47 Question\par
Explain pickling and unpickling in Python ?\par
   \par
\par
 \par
Python is an upcoming language that has a lot of scope in the programming sector. The job openings are a good opportunity for one and all with good grasp on the subject. These questions will help one get a good insight on the upcoming interview. In many interviews, the interviewers\rquote  begin with questioning the basics and how one answers these basic ones leads to further questions. These questions will help in such interviews.\par
\par
\par
\par
 \par
\par
}
 